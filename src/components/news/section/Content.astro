---
import NewsCard from "../parts/NewsCard.astro";
import Pagination from '../parts/Pagination.astro';

// ÈùôÁöÑJSON„Éï„Ç°„Ç§„É´„Åã„Çâ„Éã„É•„Éº„Çπ„Éá„Éº„Çø„ÇíÂèñÂæó
let allNews = [];
let pickupNews = [];
let regularNews = [];

try {
  console.log('üîç Fetching news data...');
  const response = await fetch('https://infocus.wp.site-prev2.com/api/news.json');

  if (!response.ok) {
    throw new Error(`HTTP error! status: ${response.status}`);
  }

  // „É¨„Çπ„Éù„É≥„Çπ„ÉÜ„Ç≠„Çπ„Éà„ÇíÂèñÂæó„Åó„Å¶JSON„Çí„Éë„Éº„Çπ
  const responseText = await response.text();

  let newsData;
  try {
    newsData = JSON.parse(responseText);
  } catch (parseError) {
    console.error('‚ùå JSON Parse Error:', parseError);
    console.log('üîç First 200 chars of response:', responseText.substring(0, 200));
    throw parseError;
  }

  // „Éá„Éº„Çø„ÅåÈÖçÂàó„Åã„Å©„ÅÜ„Åã„ÉÅ„Çß„ÉÉ„ÇØ
  const newsArray = Array.isArray(newsData) ? newsData : [newsData];
  console.log('üìä News items count:', newsArray.length);

  // „Éã„É•„Éº„Çπ„Éá„Éº„Çø„ÇíÊó•‰ªòÈ†Ü„Å´„ÇΩ„Éº„ÉàÔºàÊñ∞„Åó„ÅÑÈ†ÜÔºâ
  const sortedNews = newsArray
    .filter(item => {
      const hasTitle = item.title;
      const hasDate = item.date;
      if (!hasTitle || !hasDate) {
        // console.log('‚ö†Ô∏è Filtering out item:', { id: item.id, hasTitle, hasDate });
      }
      return hasTitle && hasDate;
    })
    .sort((a, b) => new Date(b.date) - new Date(a.date))
    .map((item, index) => {
      const newsItem = {
        id: item.id || index,
        slug: item.slug || '',
        title: item.title || '',
        date: new Date(item.date).toLocaleDateString('ja-JP', {
          year: 'numeric',
          month: '2-digit',
          day: '2-digit'
        }).replace(/\//g, '.'),
        category: item.news && item.news[0] === 10 ? 'Project' : 'News',
        url: `/news/${item.slug}/`,
        pic: item.acfs?.news_eyecatch?.url || item.acfs?.news_mv?.url || '/common/images/news/default.png'
      };
      // console.log(`üìÑ Processed item ${index}:`, { title: newsItem.title, date: newsItem.date });
      return newsItem;
    });

  allNews = sortedNews;
  pickupNews = sortedNews.slice(0, 3); // ÊúÄÊñ∞3‰ª∂
  regularNews = sortedNews.slice(3, 17); // 4‰ª∂ÁõÆ„Åã„Çâ17‰ª∂ÁõÆ„Åæ„ÅßÔºà14‰ª∂Ôºâ

  console.log('‚úÖ News data loaded successfully:', {
    total: allNews.length,
    pickup: pickupNews.length,
    regular: regularNews.length
  });

} catch (error) {
  console.error('‚ùå Failed to fetch news data:', error);
  console.error('‚ùå Error details:', {
    name: error.name,
    message: error.message,
    stack: error.stack?.substring(0, 200)
  });
}

---

<section class="p-news-content">
  <div class="p-news-pickup__list">
    <div class="p-news-pickup__list-fixedItem">
      <div class="p-news-pickup__list-fixedInner">
        <h2 class="p-news-pickup__list-fixedTitle">
          PICK UP
          <span><svg width="11" height="17" viewBox="0 0 11 17" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_240_384)"><path d="M11 11.7419V10.0008L9.19249 6.95043L10.6127 0H0.387324L1.81397 6.95043L0 10.0008V11.7419H11Z" fill="white"/><path d="M6.10035 8.13477H4.89964V17.0004H6.10035V8.13477Z" fill="white"/></g><defs><clipPath id="clip0_240_384"><rect width="11" height="17" fill="white"/></clipPath></defs></svg></span>
        </h2>
        {pickupNews.length > 0 && (
          <NewsCard
            id={1}
            title="„ÄåÂÖâ„Äç„Çí‰∏≠ÂøÉ„Å®„Åó„Åü‰∏ñÁïå„Çí‰ΩìÈ®ì„ÄÇTed S√∂derberg„Å´„Çà„ÇãÂ±ïË¶ß‰ºö„ÄåWE-WANT-YU„Äç„ÇíCONTRAST„ÅßÈñãÂÇ¨"
            date="2025.04.18"
            category="Project"
            url="/news/detail"
            pic="/common/images/news/01.png"
          />
        )}
      </div>
    </div>
    <ul class="p-news-pickup__list-index">
      {pickupNews.map((item) => (
        <li class="p-news-pickup__list-item">
          <NewsCard
            id={item.id}
            title={item.title}
            date={item.date}
            category={item.category}
            url={item.url}
            pic={item.pic}
          />
        </li>
      ))}
    </ul>
  </div>

  <div class="p-news-content__list">
    <ul class="p-news-content__list-index" data-index="news">
      {regularNews.map((item) => (
        <li class="p-news-content__list-item">
          <NewsCard
            id={item.id}
            title={item.title}
            date={item.date}
            category={item.category}
            url={item.url}
            pic={item.pic}
          />
        </li>
      ))}
    </ul>
  </div>

  {allNews.length > 17 && <Pagination />}
</section>

<style lang="scss" is:global>
@use '../../../assets/scss/mediaquery' as me;
@use '../../../assets/scss/mixin' as mi;

.p-news-content {
  margin-block-start: calc(114px + 20px);
  padding-inline: 30px;
  padding-block-end: 160px;
  @include me.sp {
    margin-block-start: 60px;
    padding-inline: 20px;
    padding-block-end: 100px;
  }

  &__list {

    &-index {
      display: grid;
      @include me.pc {
        border-top: solid 1px var(--c-gray);
      }
      @include me.sp {
        row-gap: 45px;
        margin-block-start: 45px;
      }
    }

    &-item {
      @include me.pc {
        padding-block: 20px;
        border-bottom: solid 1px var(--c-gray);
      }
    }

  }
}

.p-news-pickup {

  &__list {
    @include me.pc {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      column-gap: 30px;
    }

    &-fixedItem {
      @include me.pc {
        padding-block-end: 100px;
      }
    }

    &-fixedInner {
      @include me.pc {
        position: sticky;
        top: calc(var(--hd-height-pc-scrolled) + 120px + 20px);
        left: 0;
      }
    }

    &-fixedTitle {
      display: flex;
      align-items: center;
      column-gap: 9px;
      font-size: 2.4rem;
      @include me.pc {
        position: absolute;
        bottom: calc(100% + 20px);
        left: 0;
      }
      @include me.sp {
        column-gap: 4px;
        margin-block-end: 20px;
        font-size: 1.8rem;
      }

      span {
        display: flex;
        justify-content: center;
        align-items: center;
        transform: translateY(2px);
        width: 11px;
        height: 17px;
        @include me.sp {
          transform: translateY(1px);
          width: calc(11px * .8);
          height: calc(17px * .8);
        }
      }
    }

    &-index {
      display: grid;
      @include me.pc {
        row-gap: 70px;
        position: relative;
        padding-block-end: 100px;
        &::before {
          content: "";
          position: absolute;
          top: 0;
          left: -15px;
          width: 1px;
          height: 100%;
          background-color: var(--c-gray);
        }
      }
      @include me.sp {
        row-gap: 50px;
        margin-block-start: 50px;
        padding-block-start: 40px;
        border-top: solid 1px var(--c-gray);
      }
    }

    .c-news-card {
      @include me.pc {
        grid-template-columns: 100%;
        row-gap: 33px;
      }
    }
  }
}
</style>

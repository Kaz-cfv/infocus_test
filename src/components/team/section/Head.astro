---
// ポジションのデータ
const positions = [
  { name: "Creative Director", slug: "creative-director" },
  { name: "Producer", slug: "producer" },
  { name: "Art Director", slug: "art-director" },
  { name: "Graphic Designer", slug: "graphic-designer" },
  { name: "Web Director", slug: "web-director" },
  { name: "Web Designer", slug: "web-designer" },
  { name: "Front-end Engineer", slug: "front-end-engineer" },
  { name: "Engineer", slug: "engineer" },
  { name: "Film Director", slug: "film-director" },
  { name: "Film Editor", slug: "film-editor" },
  { name: "Production Manager", slug: "production-manager" },
  { name: "Project Manager", slug: "project-manager" },
  { name: "Account Manager", slug: "account-manager" }
];

---

<div class="p-team-head">
  <h2 class="p-team-head__title">TEAM</h2>

  <ul class="p-team-head__position js-hover">
    {positions.map((position => (
      <li class="p-team-head__position-item js-hover-item" data-filter="">
        <a href={`/team/?position=${position.slug}`}>{position.name}</a>
      </li>
    )))}
  </ul>

  <div class="p-team-head__btn" data-filter="current">
    <a href="/team/">ALL</a>
  </div>
</div>


<style lang="scss">
@use '../../../assets/scss/mediaquery' as me;
@use '../../../assets/scss/mixin' as mi;

.p-team-head {
  display: grid;
  grid-template-columns: 100%;
  align-content: flex-start;
  margin-block-start: 50px;
  padding-inline: 30px;
  @include me.pc {
    grid-template-columns: max-content 453px;
    align-content: flex-start;
    column-gap: 122px;
    row-gap: 26px;
  }
  @include me.sp {
    padding-inline: 20px;
  }

  &__title {
    font-size: 4rem;
    letter-spacing: -.02rem;
    @include me.sp {
      font-size: 3.2rem;
    }
  }

  &__position {
    display: flex;
    flex-wrap: wrap;
    align-content: flex-start;
    column-gap: 9px;
    row-gap: 10px;
    @include me.pc {
      grid-column: 2;
      grid-row: 1 / 3;
      padding-block-start: 10px;
    }
    @include me.sp {
      margin-block-start: 40px;
    }

    &-item {
      display: flex;
      align-items: center;
      column-gap: 9px;
      &::after {
        content: "/";
      }
      &:last-child {
        &::after {
          display: none;
        }
      }
      &[data-filter="current"] {
        pointer-events: none;
        a {
          color: var(--c-white);
        }
      }
      &[data-filter="uncurrent"] {
        a {
          color: var(--c-gray);
        }
      }

      a {
        color: var(--c-white);
        font-size: 1.4rem;
        font-weight: 700;
      }
    }

  }

  &__btn {
    @include me.pc {
      align-self: flex-end;
    }
    @include me.sp {
      margin-block-start: 30px;
    }
    &[data-filter="current"] a {
      pointer-events: none;
      background-color: var(--c-white);
      color: var(--c-black-base);
    }

    a {
      display: inline-flex;
      justify-content: center;
      align-items: center;
      width: 60.18px;
      height: 25px;
      border: solid 1px var(--c-white);
      border-radius: 94px;
      color: var(--cwhite);
      font-size: 1.4rem;
      font-weight: 700;
      @include me.pc {
        font-size: 1.2rem;
      }
    }
  }
}
</style>

---
import TeamCard from '../parts/TeamCard.astro';

// ÈùôÁöÑJSON„Éï„Ç°„Ç§„É´„Åã„Çâ„ÉÅ„Éº„É†„Éá„Éº„Çø„ÇíÂèñÂæó
let items = [];

try {
  const response = await fetch('https://infocus.wp.site-prev2.com/api/team.json');

  if (!response.ok) {
    throw new Error(`HTTP error! status: ${response.status}`);
  }

  const teamData = await response.json();
  const teamArray = Array.isArray(teamData) ? teamData : [teamData];

  console.log('üìä Team items count:', teamArray.length);

  // „ÉÅ„Éº„É†„Éá„Éº„Çø„ÇíÂá¶ÁêÜ
  items = teamArray
    .filter(item => item.title && item.slug)
    .map((item, index) => {
      const teamMember = {
        id: item.id || index + 1,
        name: item.title.trim(),
        pic: item.acfs?.thumbnail?.url || '/common/images/team/default.png',
        url: `/team/${item.slug}/`,
        tags: []
      };

      // position„Å®position-tag„ÇíÂá¶ÁêÜ
      const tags = [];

      // acfs.position„ÅåÂ≠òÂú®„Åó„ÄÅÁ©∫„Åß„Å™„ÅÑÂ†¥Âêà„ÅØÊúÄÂàù„Å´p„Çø„Ç∞„Å®„Åó„Å¶ËøΩÂä†
      if (item.acfs && item.acfs.position && item.acfs.position.trim() !== '') {
        tags.push({
          name: item.acfs.position.trim(),
          url: '#', // p„Çø„Ç∞„ÅßË°®Á§∫„Åô„Çã„Åü„ÇÅ„ÅÆ„Éû„Éº„Ç´„Éº
          isPosition: true
        });
      }

      // position-tag„ÇíËøΩÂä†Ôºà„É™„É≥„ÇØ‰ªò„ÅçÔºâ
      if (item.acfs && item.acfs['position-tag'] && Array.isArray(item.acfs['position-tag'])) {
        const positionTags = item.acfs['position-tag'].map(tag => ({
          name: tag.name || '',
          url: `/team/?position=${tag.slug || ''}`,
          isPosition: false
        }));
        tags.push(...positionTags);
      }

      teamMember.tags = tags;

      return teamMember;
    });

  console.log('‚úÖ Team data loaded successfully:', {
    total: items.length,
    membersWithTags: items.filter(item => item.tags.length > 0).length
  });

} catch (error) {
  console.error('‚ùå Failed to fetch team data:', error);
  console.error('‚ùå Error details:', {
    name: error.name,
    message: error.message,
    stack: error.stack?.substring(0, 200)
  });
}
---

<div class="p-team-content">
  <ul class="p-team-content__list">
    {items.map((item => (
      <li class="p-team-content__list-item" data-item={item.id}>
        <TeamCard
          id={item.id}
          name={item.name}
          pic={item.pic}
          url={item.url}
          tags={item.tags}
        />
      </li>
    )))}
  </ul>

  <!-- SPÊôÇ„ÅÆ2„Ç´„É©„É†„É¨„Ç§„Ç¢„Ç¶„ÉàÁî® -->
  <div class="p-team-content__columns" style="display: none;">
    <div class="p-team-content__column" data-column="left"></div>
    <div class="p-team-content__column" data-column="right"></div>
  </div>
</div>

<style lang="scss">
@use '../../../assets/scss/mediaquery' as me;
@use '../../../assets/scss/mixin' as mi;

.p-team-content {
  margin-block-start: 90px;
  padding-inline: 30px;
  padding-block-end: 107px;
  @include me.sp {
    margin-block-start: 60px;
    padding-inline: 20px;
    padding-block-end: 80px;
  }

  &__list {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    column-gap: 25px;
    row-gap: 50px;
    @include me.sp {
      display: none;
    }
  }

  &__columns {
    display: none;
    @include me.sp {
      display: flex;
      column-gap: 20px;
      align-items: flex-start;
    }
  }

  &__column {
    flex: 1;
    display: flex;
    flex-direction: column;
    row-gap: 50px;
  }
}
</style>

<script>
class TeamLayoutManager {
  constructor() {
    this.init();
  }

  init() {
    if (window.innerWidth <= 768) {
      this.setupMobileLayout();
    }

    window.addEventListener('resize', () => {
      if (window.innerWidth <= 768) {
        this.setupMobileLayout();
      } else {
        this.setupDesktopLayout();
      }
    });
  }

  setupMobileLayout() {
    const list = document.querySelector('.p-team-content__list');
    const columns = document.querySelector('.p-team-content__columns');
    const leftColumn = document.querySelector('[data-column="left"]');
    const rightColumn = document.querySelector('[data-column="right"]');

    if (!list || !columns) return;

    // „É™„Çπ„Éà„ÇíÈùûË°®Á§∫„Å´„Åó„ÄÅ„Ç´„É©„É†„ÇíË°®Á§∫
    list.style.display = 'none';
    columns.style.display = 'flex';

    // „Ç´„É©„É†„Çí„ÇØ„É™„Ç¢
    leftColumn.innerHTML = '';
    rightColumn.innerHTML = '';

    // „Ç¢„Ç§„ÉÜ„É†„ÇíÂ∑¶Âè≥„Å´ÊåØ„ÇäÂàÜ„Åë
    const items = list.querySelectorAll('.p-team-content__list-item');
    items.forEach((item, index) => {
      const clonedItem = item.cloneNode(true);
      if (index % 2 === 0) {
        leftColumn.appendChild(clonedItem);
      } else {
        rightColumn.appendChild(clonedItem);
      }
    });
  }

  setupDesktopLayout() {
    const list = document.querySelector('.p-team-content__list');
    const columns = document.querySelector('.p-team-content__columns');

    if (!list || !columns) return;

    list.style.display = 'grid';
    columns.style.display = 'none';
  }
}

// „Éö„Éº„Ç∏Ë™≠„ÅøËæº„ÅøÊôÇ„Å´ÂÆüË°å
if (typeof window !== 'undefined') {
  document.addEventListener('DOMContentLoaded', () => {
    new TeamLayoutManager();
  });
}
</script>

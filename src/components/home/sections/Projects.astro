---
import ProjectCard from "../parts/ProjectCard.astro";

// PropsÂûãÂÆöÁæ© - Á©∫„ÅÆProps„Åß„ÇØ„É©„Ç§„Ç¢„É≥„Éà„Çµ„Ç§„Éâ„ÅßÂãïÁöÑ„Å´Ë®≠ÂÆö
export interface Props {}
---
<section class="p-home-projects">
  <!-- <ul class="p-home-projects__list --pickup">
    {pickup.map((project) => (
      <li class="p-home-projects__card">
        <ProjectCard
          id={project.id}
          title={project.title}
          tags={project.tags}
          imageSrc={project.imageSrc}
          type={project.type}
          url={project.url}
        />
      </li>
    ))}
  </ul> -->
  <ul class="p-home-projects__list" id="projectsList">
    <!-- „Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅØ„ÇØ„É©„Ç§„Ç¢„É≥„Éà„Çµ„Ç§„Éâ„ÅßÂãïÁöÑ„Å´ËøΩÂä†„Åï„Çå„ÇãÂâç„ÅÆÂàùÊúüË°®Á§∫ -->
  </ul>
  <div class="p-home-projects__link">
    <a href="/projects/">
      ALL PROJECTS
      <span><svg width="32" height="33" viewBox="0 0 32 33" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M0 14.1601L23.7876 14.1601C20.713 11.3362 15.4539 6.21272 12.177 3.02567L15.2111 0L32 16.4193V16.5L15.2111 33L12.177 29.813C15.4539 26.6663 20.713 21.5024 23.7876 18.6785H0L0 14.1601Z" fill="white"/></svg></span>
    </a>
  </div>
</section>

<!-- „ÇØ„É©„Ç§„Ç¢„É≥„Éà„Çµ„Ç§„Éâ„ÅßAPI„Éá„Éº„Çø„ÇíÂèó„ÅëÂèñ„Çã -->
<script>
  // „Ç´„Çπ„Çø„É†„Ç§„Éô„É≥„Éà„ÅßAPI„Éá„Éº„Çø„ÇíÂèó„ÅëÂèñ„Çã
  document.addEventListener('homeDataLoaded', (event) => {
    const homeData = (event as CustomEvent).detail;

    // „Éó„É≠„Ç∏„Çß„ÇØ„Éà„Éá„Éº„Çø„ÇíÂá¶ÁêÜ
    let projectsData = [];

    // „Éá„Éº„ÇøÊßãÈÄ†„Å´Âøú„Åò„Å¶ÊüîËªü„Å´ÂØæÂøú
    let pickupData = null;
    if (homeData?.projects?.pickup) {
      pickupData = homeData.projects.pickup;
    } else if (homeData?.home?.projects?.pickup) {
      pickupData = homeData.home.projects.pickup;
    }

    if (pickupData && Array.isArray(pickupData)) {
      // ‰ªïÊßò„Å´Âü∫„Å•„ÅÑ„Å¶„Éá„Éº„Çø„ÇíÊï¥ÂΩ¢Ôºàpickup‰ΩøÁî® - acf_fc_layoutÂà•ÂØæÂøúÔºâ
      projectsData = pickupData.map((pickupItem, index) => {
        let mappedData = {
          cardType: pickupItem.acf_fc_layout || 'unknown',
          id: 0,
          url: '#',
          title: '',
          imageSrc: '',
          videoSrc: '',
          tags: [],
          isMobile: pickupItem.is_mobile !== false
        };

        if (pickupItem.acf_fc_layout === 'post') {
          // post „Çø„Ç§„Éó„ÅÆÂá¶ÁêÜ
          const post = pickupItem.post || {};
          const acfs = post.acfs || {};

          // „Çø„Ç∞ÊÉÖÂ†±„ÅÆÂá¶ÁêÜ
          const tags = [];
          if (acfs.tags && Array.isArray(acfs.tags)) {
            acfs.tags.forEach(tagItem => {
              if (tagItem.terms && tagItem.terms.name) {
                tags.push({
                  name: tagItem.terms.name,
                  url: `/projects/?tag=${tagItem.terms.slug || ''}`
                });
              }
            });
          }

          mappedData = {
            cardType: 'post',
            id: post.ID || 0,
            url: `/projects/${post.post_name || ''}`,
            title: post.post_title || '',
            imageSrc: post.acfs?.main?.image?.url || '',
            videoSrc: '',
            tags: tags,
            isMobile: pickupItem.is_mobile !== false
          };

        } else if (pickupItem.acf_fc_layout === 'image') {
          // image „Çø„Ç§„Éó„ÅÆÂá¶ÁêÜ
          mappedData = {
            cardType: 'image',
            id: pickupItem.image?.ID || 0,
            url: pickupItem.link || '#',
            title: pickupItem.image?.title || '',
            imageSrc: pickupItem.image?.url || '',
            videoSrc: '',
            tags: [],
            type: 'cover',
            isMobile: pickupItem.is_mobile !== false
          };

        } else if (pickupItem.acf_fc_layout === 'movie') {
          // movie „Çø„Ç§„Éó„ÅÆÂá¶ÁêÜ
          mappedData = {
            cardType: 'movie',
            id: pickupItem.image?.ID || 0,
            url: pickupItem.link || '#',
            title: pickupItem.image?.title || '',
            imageSrc: '',
            videoSrc: pickupItem.file || '',
            tags: [],
            type: 'cover',
            isMobile: pickupItem.is_mobile !== false
          };
        }

        return mappedData;
      });

      // console.log('üöÄ „Éó„É≠„Ç∏„Çß„ÇØ„Éà„Éá„Éº„ÇøÂèñÂæó:', projectsData.length + '‰ª∂');
    }

    // „Éó„É≠„Ç∏„Çß„ÇØ„Éà„Éá„Éº„Çø„Çí„Ç∞„É≠„Éº„Éê„É´„Å´‰øùÂ≠ò
    window.homeProjectsData = projectsData;

    // „Ç´„Çπ„Çø„É†„Ç§„Éô„É≥„Éà„Åß„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Éá„Éº„ÇøÊõ¥Êñ∞„ÇíÈÄöÁü•
    const projectEvent = new CustomEvent('projectsDataLoaded', {
      detail: projectsData
    });
    document.dispatchEvent(projectEvent);

    // „Éó„É≠„Ç∏„Çß„ÇØ„Éà„É™„Çπ„Éà„ÇíÂãïÁöÑ„Å´ËøΩÂä†ÔºàProjectCard„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÅÆÊßãÈÄ†„Å´Ê∫ñÊã†Ôºâ
    const projectsList = document.getElementById('projectsList');
    if (projectsList && projectsData.length > 0) {
      projectsList.innerHTML = projectsData.map(project => {
        const mobileClass = project.isMobile ? '' : 'sp-hidden';
        const tagsHtml = project.tags.map((tag, index) => {
          const separator = index < project.tags.length - 1 ? '<span class="c-project-card__separator">,</span>' : '';
          return `<a href="${tag.url}" class="c-project-card__category js-hover-item">${tag.name}</a>${separator}`;
        }).join('');

        return `
          <li class="p-home-projects__card ${mobileClass}">
            <div class="c-project-card" data-id="${project.id}" data-type="${project.type || project.cardType}">
              <a href="${project.url}" class="c-project-card__image-wrapper">
                ${project.videoSrc ?
                  `<video src="${project.videoSrc}" class="c-project-card__video" muted loop playsinline preload="metadata"></video>` :
                  `<img src="${project.imageSrc}" alt="${project.title}" class="c-project-card__image" />`
                }
              </a>
              <div class="c-project-card__content">
                <h3 class="c-project-card__title">${project.title}</h3>
                <div class="c-project-card__tags js-hover">
                  ${tagsHtml}
                </div>
              </div>
            </div>
          </li>
        `;
      }).join('');

      // DOMÁîüÊàêÂÆå‰∫ÜÂæå„Å´NavigationHover„ÇíÈÅ©Áî®
      setTimeout(() => {
        // NavigationHover„ÅÆÂÜçÂàùÊúüÂåñ„Ç§„Éô„É≥„Éà„ÇíÁô∫ÁÅ´
        const hoverEvent = new CustomEvent('reinitializeHover', {
          detail: { element: projectsList }
        });
        document.dispatchEvent(hoverEvent);

        // „Ç∞„É≠„Éº„Éê„É´„Å™NavigationHover„Ç§„É≥„Çπ„Çø„É≥„Çπ„ÅåÂ≠òÂú®„Åô„ÇãÂ†¥Âêà„ÄÅÁõ¥Êé•ÂàùÊúüÂåñ
        if (window.navigationHover && typeof window.navigationHover.initializeInElement === 'function') {
          window.navigationHover.initializeInElement(projectsList);
        }

        // ÊâãÂãï„Åß„Éõ„Éê„ÉºÂá¶ÁêÜ„ÇíËøΩÂä†
        const hoverContainers = projectsList.querySelectorAll('.js-hover');
        hoverContainers.forEach((container) => {
          const items = container.querySelectorAll('.js-hover-item');
          items.forEach((item) => {
            item.addEventListener('mouseenter', (e) => {
              const hoveredItem = e.currentTarget as HTMLElement;
              hoveredItem.classList.add('is-hovered');

              items.forEach(siblingItem => {
                if (siblingItem !== hoveredItem) {
                  (siblingItem as HTMLElement).classList.add('is-dimmed');
                }
              });
            });

            item.addEventListener('mouseleave', (e) => {
              const leftItem = e.currentTarget as HTMLElement;
              leftItem.classList.remove('is-hovered');

              items.forEach(siblingItem => {
                if (siblingItem !== leftItem) {
                  (siblingItem as HTMLElement).classList.remove('is-dimmed');
                }
              });
            });
          });
        });

      }, 100);
    }
  });
</script>

<style lang="scss" is:global>
@use '../../../assets/scss/mediaquery' as me;
@use '../../../assets/scss/mixin' as mi;

.p-home-projects {
  overflow: hidden;

  &__list {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    @include me.sp {
      grid-template-columns: 50% 50%;
    }
    &.--pickup {
      @include me.pc {
        grid-template-columns: 50% 50%;
      }
      @include me.sp {
        grid-template-columns: 100%;
      }
    }
  }

  &__card {
    border-right: solid 1px var(--c-gray02);
    border-bottom: solid 1px var(--c-gray02);
    border-left: solid 1px var(--c-gray02);

    &.sp-hidden {
      @include me.sp {
        display: none;
      }
    }

    &:nth-child(4n) {
      @include me.pc {
        border-right-color: transparent;
      }
    }
    &:nth-child(2n) {
      @include me.sp {
        border-right-color: transparent;
      }
    }
  }

  &__link {
    border-top: solid 2px var(--c-white);

    a {
      display: flex;
      justify-content: center;
      align-items: center;
      column-gap: 27px;
      padding-block: 72px;
      color: var(--c-white);
      font-size: 5.8rem;
      font-weight: 700;
      @include me.sp {
        column-gap: 14px;
        padding-block: 35px;
        font-size: 2.6rem;
      }
    }

    span {
      display: flex;
      justify-content: center;
      align-items: center;
      width: 32px;
      height: 33px;
      @include me.sp {
        width: 15px;
        height: 16px;
      }
    }
  }
}

.c-project-card {
  display: flex;
  flex-direction: column;
  position: relative;
  transition: opacity 0.3s ease-out;
  height: 100%;

  &[data-type="cover"] {
    height: 100%;
  }

  &:not([data-type="cover"]) {
    @include me.pc {
      padding-bottom: 78px;
    }
    @include me.sp {
      padding-bottom: 7.701vw;
    }
    &[data-type="pickup"] {
      @include me.pc {
        padding-bottom: 50px;
      }
      @include me.sp {
        padding-bottom: 25px;
      }
    }
  }

  &__image-wrapper {
    display: block;
    position: relative;
    overflow: hidden;
    aspect-ratio: 16 / 9;
    @at-root [data-type="pickup"] & {
      @include me.pc {
        margin-top: 30px;
        margin-inline: 30px;
      }
    }
    @at-root [data-type="cover"] & {
      aspect-ratio: 1 / 1;
      @include me.pc {
        flex: 1;
      }
      @include me.sp {
        height: 100%;
        min-height: 100%;
        width: 100%;
      }
    }
  }

  &__image {
    @include mi.absolute-all;
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease-out;
    @include me.sp {
      aspect-ratio: 16 / 9;
    }
  }

  &__video {
    @include mi.absolute-all;
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease-out;
    z-index: 2;
    @at-root .c-project-card.is-play & {
      opacity: 1;
      visibility: visible;
    }
  }

  &__content {
    display: flex;
    flex-direction: column;
    row-gap: 8px;
    margin-top: 16px;
    padding-inline: 30px;
    @include me.sp {
      row-gap: 0;
      margin-top: 8px;
      padding-inline: 16px;
    }
    @at-root [data-type="cover"] & {
      display: none;
    }
  }

  &__title {
    color: var(--c-white);
    font-size: 1.6rem;
    font-weight: 700;
    line-height: 2.32rem;
    @include me.sp {
      font-size: 1.4rem;
    }
    @at-root [data-type="pickup"] & {
      font-size: 2rem;
      @include me.sp {
        font-size: 1.8rem;
      }
    }
  }

  &__tags {
    font-size: 1.2rem;
    font-weight: 600;
    line-height: 2.32rem;
    @at-root [data-type="pickup"] & {
      font-size: 1.4rem;
      @include me.sp {
        font-size: 1.2rem;
      }
    }
  }

  &__category {
    display: inline-block;
    color: var(--c-gray);
  }

  &__separator {
    color: var(--c-gray);
    margin-inline-end: 4px;
  }
}
</style>

---
interface Props {
  prevMember?: {
    slug: string;
    name: string;
  } | null;
  nextMember?: {
    slug: string;
    name: string;
  } | null;
}

const { prevMember = null, nextMember = null } = Astro.props;
---

<nav class="p-team-detail__fixedNavi">
  <ul class="p-team-detail__fixedNavi-list">
    <li
      data-navi="prev"
      class={`p-team-detail__fixedNavi-item --first ${!prevMember ? '--disabled' : ''}`}
    >
      {prevMember ? (
        <a
          href={`/team/${prevMember.slug}/`}
          title={prevMember.name}
        >
          Prev
        </a>
      ) : (
        <span>Prev</span>
      )}
    </li>
    <li data-navi="team" class="p-team-detail__fixedNavi-item">
      <a href="/team/">Back to Teams</a>
    </li>
    <li
      data-navi="next"
      class={`p-team-detail__fixedNavi-item --last ${!nextMember ? '--disabled' : ''}`}
    >
      {nextMember ? (
        <a
          href={`/team/${nextMember.slug}/`}
          title={nextMember.name}
        >
          Next
        </a>
      ) : (
        <span>Next</span>
      )}
    </li>
  </ul>
</nav>

<style lang="scss">
@use '../../../assets/scss/mediaquery' as me;
@use '../../../assets/scss/mixin' as mi;

.p-team-detail__fixedNavi {

  &-list {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    border-top: solid 1px var(--c-gray);
    border-bottom: solid 1px var(--c-gray);
  }

  &-item {
    height: 60px;
    &:last-child a {
      &::after {
        background-color: transparent;
      }
    }
    // 無効状態のスタイル
    &.--disabled {
      a, span {
        pointer-events: none;
        opacity: 0.5;
        color: var(--c-gray) !important;
      }
    }

    a, span {
      display: flex;
      justify-content: center;
      align-items: center;
      position: relative;
      width: 100%;
      height: 100%;
      color: var(--c-white);
      font-size: 1.4rem;
      font-weight: 600;

      &::after {
        content: "";
        position: absolute;
        top: 0;
        right: 0;
        width: 1px;
        height: 100%;
        background-color: var(--c-gray);
      }
    }

    // ホバー効果（有効な場合のみ）
    &:not(.--disabled) a {
      transition: background-color .3s var(--ease-in-out-quad);

      &:hover {
        background-color: rgba(255, 255, 255, 0.1);
      }
    }
  }

}

</style>

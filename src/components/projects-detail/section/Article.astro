---
import FixedNavi from "../parts/FixedNavi.astro";
import Table from "../parts/Table.astro";
import Lead from "../section/Lead.astro";
import Content from "../section/Content.astro";
import Credit from "./Credit.astro";

export interface Props {
  project: any;
  prevProject?: {
    slug: string;
    title: string;
  } | null;
  nextProject?: {
    slug: string;
    title: string;
  } | null;
}

const { project, prevProject = null, nextProject = null } = Astro.props;

const getEyecatchData = () => {
  const movieUrl = project.acfs?.main?.movie?.url;
  const imageUrl = project.acfs?.main?.image?.url;

  // 動画が設定されている場合（falseでない場合）は動画を優先
  if (movieUrl && movieUrl !== false) {
    return {
      type: 'video',
      url: movieUrl,
      caption: project.title || 'Project video',
      hasMedia: true
    };
  }

  // 動画がない場合、画像をチェック
  if (imageUrl && imageUrl !== false) {
    return {
      type: 'image',
      url: imageUrl,
      caption: project.title || 'Project image',
      hasMedia: true
    };
  }

  // どちらも設定されていない場合
  return {
    type: null,
    url: null,
    caption: null,
    hasMedia: false
  };
};

const article = {
  eyecatch: getEyecatchData(),
  title: project.title || '',
  website: project.acfs?.project_url || '',
  client: project.acfs?.basics?.clients || '',
  year: project.acfs?.basics?.year || '',
  service: project.acfs?.basics?.service ?
    project.acfs.basics.service.split(', ').map(name => ({ name: name.trim(), url: '#' })) :
    [],
  awards: project.acfs?.award?.title ?
    project.acfs.award.title.split('\n').filter(award => award.trim()).map(name => ({ name: name.trim() })) :
    [],
  lead: {
    title: project.acfs?.lead || '',
    text: project.acfs?.outline || ''
  },
  credit: project.acfs?.credits || '',
}
---

<article class="p-project-detail-article" data-main-content>
  <div class="p-project-detail__fixedNavi--sp">
    <FixedNavi prevProject={prevProject} nextProject={nextProject} />
  </div>
  <div class="p-project-detail-article__info">
    <div class="p-project-detail-article__info-inner">
      {article.eyecatch.hasMedia && (
        <div class="p-project-detail-article__info-thumb">
          {article.eyecatch.type === 'video' ? (
            <video src={article.eyecatch.url} muted autoplay loop playsinline></video>
          ) : (
            <figure><img src={article.eyecatch.url} alt={article.eyecatch.caption} /></figure>
          )}
        </div>
      )}
      <h1 class="p-project-detail-article__info-title">{article.title}</h1>
      <Table
        website={article.website}
        client={article.client}
        year={article.year}
        service={article.service}
        awards={article.awards}
      />
      <div class="p-project-detail__fixedNavi--pc">
        <FixedNavi prevProject={prevProject} nextProject={nextProject} />
      </div>
    </div>
  </div>

  <div class="p-project-detail-article__content">
    {article.eyecatch.hasMedia && (
      <div class="p-project-detail-article__eyecatch">
        {article.eyecatch.type === 'video' ? (
          <video src={article.eyecatch.url} muted autoplay loop playsinline></video>
        ) : (
          <figure>
            <img src={article.eyecatch.url} alt={article.eyecatch.caption} />
          </figure>
        )}
      </div>
    )}
    <Lead
      title={article.lead.title}
      text={article.lead.text}
    />
    <Content contents={project.acfs?.contents || []} project={project} />
    <Credit creditData={article.credit} />
  </div>

</article>


<style lang="scss">
@use '../../../assets/scss/mediaquery' as me;
@use '../../../assets/scss/mixin' as mi;

.p-project-detail-article {
  display: grid;
  grid-template-columns: 100%;
  align-content: flex-start;
  @include me.pc {
    grid-template-columns: 608px 1fr;
  }
}

.p-project-detail__fixedNavi {
  &--pc {
    // margin-block-start: 125px;
    margin-block-start: auto;
    @include me.sp {
      display: none;
    }
  }
  &--sp {
    position: sticky;
    top: calc(var(--hd-height-sp) - 1px);
    // top: calc(100% - var(--hd-height-sp) - 1px);
    left: 0;
    @include mi.z-contents(1);
    background-color: var(--c-black-base);
    @include me.pc {
      display: none;
    }
  }
}

.p-project-detail-article__info {
  @include me.pc {
    height: 100%;
    border-right: solid 1px var(--c-gray);
  }
  @include me.sp {
    padding-block-end: 60px;
    border-bottom: solid 1px var(--c-gray);
  }

  &-inner {
    @include me.pc {
      display: flex;
      flex-direction: column;
      position: sticky;
      top: 0;
      left: 0;
      height: 100vh;
      padding-block-start: 114px;
      border-bottom: solid 1px var(--c-gray);
    }
  }

  &-thumb {
    @include me.pc {
      display: none;
    }

    video {
      max-width: 100%;
    }
  }

  &-title {
    font-size: 3.8rem;
    @include me.pc {
      padding-inline: 30px;
    }
    @include me.sp {
      margin-block-start: 40px;
      padding-inline: 20px;
      font-size: 2.9rem;
      font-weight: 600;
    }
  }

}

.p-project-detail-article__content {
  padding-block-end: 180px;
  @include me.sp {
    padding-inline: 20px;
    padding-block: 60px 80px;
  }
}

.p-project-detail-article__eyecatch {
  @include me.sp {
    display: none;
  }

  video {
    max-width: 100%;
  }
}

</style>

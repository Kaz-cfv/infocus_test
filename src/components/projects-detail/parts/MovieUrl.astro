---
export interface Props {
  url: string;
}

const { url } = Astro.props;

// YouTube URLからIDを抽出
function extractYouTubeId(url: string): string | null {
  const patterns = [
    /(?:youtube\.com\/watch\?v=|youtu\.be\/|youtube\.com\/embed\/)([a-zA-Z0-9_-]{11})/,
    /youtube\.com\/watch\?.*v=([a-zA-Z0-9_-]{11})/
  ];

  for (const pattern of patterns) {
    const match = url.match(pattern);
    if (match) return match[1];
  }
  return null;
}

// Vimeo URLからIDを抽出
function extractVimeoId(url: string): string | null {
  const pattern = /vimeo\.com\/(\d+)/;
  const match = url.match(pattern);
  return match ? match[1] : null;
}

const youtubeId = extractYouTubeId(url);
const vimeoId = extractVimeoId(url);
---

<div class="c-movie-embed">
  {youtubeId && (
    <iframe
      src={`https://www.youtube.com/embed/${youtubeId}`}
      title="YouTube video player"
      frameborder="0"
      allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
      allowfullscreen
    ></iframe>
  )}

  {vimeoId && (
    <iframe
      src={`https://player.vimeo.com/video/${vimeoId}`}
      title="Vimeo video player"
      frameborder="0"
      allow="autoplay; fullscreen; picture-in-picture"
      allowfullscreen
    ></iframe>
  )}

  {!youtubeId && !vimeoId && (
    <p>Unsupported video URL: {url}</p>
  )}
</div>

<style lang="scss">
@use '../../../assets/scss/mediaquery' as me;

.c-movie-embed {
  position: relative;
  width: 100%;
  height: 0;
  padding-bottom: 56.25%; // 16:9 aspect ratio
  margin-block-end: 30px;
  @include me.sp {
    margin-block-end: 20px;
  }

  iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}
</style>
